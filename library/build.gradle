apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding{
        enabled true
    }
}

ext{
    material_version = '1.2.0-alpha03'
    constraint_layout = '2.0.0-beta4'
    lifecycle_version = '2.1.0'
    androidx_core_version = '1.1.0'
    androidx_support_version = '1.1.0'
    viewpager_version = '1.0.0'
    glide_version = '4.10.0'
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "androidx.appcompat:appcompat:$androidx_support_version"
    api "androidx.core:core-ktx:$androidx_core_version"
    api "com.google.android.material:material:$material_version"
    api "androidx.constraintlayout:constraintlayout:$constraint_layout"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "com.github.bumptech.glide:glide:$glide_version"
    api "androidx.viewpager2:viewpager2:$viewpager_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

ext {
    PUBLISH_GROUP_ID = 'com.github.alphemsoft'
    PUBLISH_ARTIFACT_ID = 'arum_filepicker'
    PUBLISH_VERSION = '0.7.5-beta10'
}

def sonaScript = new File("${rootProject.projectDir}/sonascripts/publish-mavencentral.gradle")
if(sonaScript.exists()){
    apply from: sonaScript.path
}
